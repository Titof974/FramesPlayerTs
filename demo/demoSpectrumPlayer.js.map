{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/eventEmitter.ts","webpack:///./src/abstractPlayer.ts","webpack:///./src/demo/demoSpectrumPlayer.ts","webpack:///./src/framesplayer.ts","webpack:///./src/frame.ts","webpack:///./src/point.ts","webpack:///./src/timeline.ts","webpack:///./src/players/spectrumPlayer.ts","webpack:///./src/players/spectrumPlayerConfig.ts","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/discrete.js","webpack:///./node_modules/d3-interpolate/src/hue.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale/src/diverging.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Emitter","[object Object]","this","events","eventName","Set","fn","_getEventListByName","add","self","onceFn","args","removeListener","apply","on","forEach","that","delete","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","eventEmitter_1","AbstractPlayer","chartElement","timeline","props","state","commands","_this","pause","play","prev","reset","ms","setTimeout","framesplayer_1","body","document","getElementsByTagName","frames","AbstractFramesBuilder","points","counter","increase","Math","PI","j","push","Point","sin","Frame","min","max","ceil","floor","random","build","player","SpectrumPlayer","Timeline","SpectrumPlayerConfig","frame_1","point_1","timeline_1","abstractPlayer_1","spectrumPlayer_1","spectrumPlayerConfig_1","duration","raw","x","y","cursor","size","length","current","__importStar","mod","k","d3","super","initPlayer","elems","svg","select","append","attr","containerWidth","containerHeight","g","margin","left","top","autoscale","domain","autoFindDomain","findDomainForFrame","scaleLinear","range","width","minX","maxX","height","minY","maxY","xAxis","axisBottom","ticks","yAxis","axisLeft","initBrush","line","main","path","voironoi","initFocus","initOverlay","initControlBar","display","initCommands","atEnd","sleep","manualFindDomain","setCursor","drawCtrlBar","brush","brushcall","remove","brushended","focus","style","focustextbg","focustext","focusText","text","node","bbox","getBBox","resetZoom","mouse","site","voronoiDiagram","find","voronoiRadius","data","event","preventDefault","menu","contextMenu","ctrlbar","ctrlBarBg","ctrlBar","reDrawCtrlBar","mx","drag","voronoi","f","map","domain_offset","min_x","max_x","min_y","max_y","updateDomainAndScale","fixedXscale","fixed_minY","fixed_maxY","transition","selection","ratio","invert","move","zoom","items","rescale","selectAll","enter","z","nodes","scaleItems","datum","right","bottom","CONTAINER_WIDTH","CONTAINER_HEIGHT","ascending","a","b","NaN","bisector","compare","lo","hi","mid","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","sqrt","src_extent","array_array","slice","constant","identity","src_range","start","stop","arguments","e10","e5","e2","count","reverse","tickIncrement","isFinite","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","threshold","histogram","xz","x0","x1","tz","isArray","shift","pop","bin","bins","_","thresholds","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","entering","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","axis","context","format","spacing","range0","range1","position","bandwidth","offset","round","copy","tick","order","tickExit","exit","tickEnter","merge","insert","getAttribute","parentNode","filter","each","tickSize","axisTop","axisRight","noop","dispatch","Error","Dispatch","type","set","callback","concat","constructor","typename","types","T","trim","split","indexOf","src_dispatch","xhtml","namespaces","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","_next","_parent","__data__","appendChild","child","insertBefore","keyPrefix","bindIndex","group","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","nopropagation","stopImmediatePropagation","noevent","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","d3_drag_src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","valueOf","discrete","src_hue","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","Infinity","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","tween","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","src_brush","handleSize","initialize","handle","redraw","started","emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","keys","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","createObject","setObject","createMap","setMap","sortKey","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","undefined","dsv_dsv","dsv_csv","dsv_tsv","src_image","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","src_link","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","src_centroid","d3_geo_src_constant","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","d3_geo_src_path","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","equalEarth","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","circles","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","src_stratify","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","src_second","seconds","minute_minute","getMinutes","src_minute","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","utcTime","sequential","k10","diverging","k21","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","viridis","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","src_line","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","__webpack_exports__"],"mappings":"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","file":"demoSpectrumPlayer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\r\n// Thanks to https://gist.github.com/mudge/5830382\r\n// A proper js event emitter system for web browser\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Emitter {\r\n    constructor() {\r\n        this.events = {};\r\n    }\r\n    _getEventListByName(eventName) {\r\n        if (typeof this.events[eventName] === 'undefined') {\r\n            this.events[eventName] = new Set();\r\n        }\r\n        return this.events[eventName];\r\n    }\r\n    on(eventName, fn) {\r\n        this._getEventListByName(eventName).add(fn);\r\n    }\r\n    once(eventName, fn) {\r\n        const self = this;\r\n        const onceFn = function (...args) {\r\n            self.removeListener(eventName, onceFn);\r\n            fn.apply(self, args);\r\n        };\r\n        this.on(eventName, onceFn);\r\n    }\r\n    emit(eventName, ...args) {\r\n        const that = this;\r\n        this._getEventListByName(eventName).forEach(function (that, fn) {\r\n            fn.apply(that, args);\r\n        }.bind(this));\r\n    }\r\n    removeListener(eventName, fn) {\r\n        this._getEventListByName(eventName).delete(fn);\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst eventEmitter_1 = require(\"./eventEmitter\");\r\nclass AbstractPlayer {\r\n    constructor(chartElement, timeline, props) {\r\n        this.state = false;\r\n        this.chartElement = chartElement;\r\n        this.commands = new eventEmitter_1.Emitter();\r\n        this.timeline = timeline;\r\n        this.props = props;\r\n    }\r\n    initCommands() {\r\n        var _this = this;\r\n        this.commands.on('pause', function () {\r\n            _this.pause();\r\n        });\r\n        this.commands.on('play', function () {\r\n            _this.play();\r\n        });\r\n        this.commands.on('playorpause', function () {\r\n            (_this.state) ? _this.pause() : _this.play();\r\n        });\r\n        this.commands.on('next', function () {\r\n            _this.next();\r\n        });\r\n        this.commands.on('prev', function () {\r\n            _this.prev();\r\n        });\r\n        this.commands.on('reset', function () {\r\n            _this.reset();\r\n        });\r\n    }\r\n    setTimeline(timeline) {\r\n        this.timeline = timeline;\r\n    }\r\n    sleep(ms) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise(resolve => setTimeout(resolve, ms));\r\n        });\r\n    }\r\n}\r\nexports.AbstractPlayer = AbstractPlayer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst framesplayer_1 = require(\"../framesplayer\");\r\nclass DummyFramesBuilder extends framesplayer_1.AbstractFramesBuilder {\r\n    build() {\r\n        let frames = [];\r\n        for (var i = 0; i < 100; ++i) {\r\n            let points = [];\r\n            let counter = 0;\r\n            let increase = 90 / 180 * Math.PI / 9;\r\n            for (var j = 0; j < 100; ++j) {\r\n                points.push(framesplayer_1.Point(j, 180 - Math.sin(counter + i * Math.PI / 9) * 120));\r\n                counter += increase;\r\n            }\r\n            frames.push(framesplayer_1.Frame(points, 100));\r\n        }\r\n        return frames;\r\n    }\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}\r\nlet body = document.getElementsByTagName(\"body\");\r\nlet frames = new DummyFramesBuilder().build();\r\nlet player = new framesplayer_1.SpectrumPlayer(body, new framesplayer_1.Timeline(frames), framesplayer_1.SpectrumPlayerConfig);\r\nexports.player = player;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar eventEmitter_1 = require(\"./eventEmitter\");\r\nexports.Emitter = eventEmitter_1.Emitter;\r\nvar frame_1 = require(\"./frame\");\r\nexports.Frame = frame_1.Frame;\r\nexports.AbstractFramesBuilder = frame_1.AbstractFramesBuilder;\r\nvar point_1 = require(\"./point\");\r\nexports.Point = point_1.Point;\r\nvar timeline_1 = require(\"./timeline\");\r\nexports.Timeline = timeline_1.Timeline;\r\nvar abstractPlayer_1 = require(\"./abstractPlayer\");\r\nexports.AbstractPlayer = abstractPlayer_1.AbstractPlayer;\r\nvar spectrumPlayer_1 = require(\"./players/spectrumPlayer\");\r\nexports.SpectrumPlayer = spectrumPlayer_1.SpectrumPlayer;\r\nvar spectrumPlayerConfig_1 = require(\"./players/spectrumPlayerConfig\");\r\nexports.SpectrumPlayerConfig = spectrumPlayerConfig_1.SpectrumPlayerConfig;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction Frame(points, duration) {\r\n    let _duration = (duration) ? duration : 0;\r\n    return { points, 'duration': _duration };\r\n}\r\nexports.Frame = Frame;\r\nclass AbstractFramesBuilder {\r\n    constructor(raw) {\r\n        this.raw = raw;\r\n        this.raw = raw;\r\n    }\r\n}\r\nexports.AbstractFramesBuilder = AbstractFramesBuilder;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction Point(x, y) {\r\n    return { x, y };\r\n}\r\nexports.Point = Point;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Timeline {\r\n    constructor(frames) {\r\n        this.frames = frames;\r\n        this.cursor = 0;\r\n    }\r\n    setCursor(i) {\r\n        if (i >= 0 && i < this.size()) {\r\n            this.cursor = i;\r\n        }\r\n        else if (i > this.size()) {\r\n            this.cursor = this.size() - 1;\r\n        }\r\n        else {\r\n            this.cursor = 0;\r\n        }\r\n    }\r\n    size() {\r\n        return this.frames.length;\r\n    }\r\n    current() {\r\n        return this.frames[this.cursor];\r\n    }\r\n    next() {\r\n        if (this.cursor < this.size() - 1)\r\n            this.cursor++;\r\n        return this.current();\r\n    }\r\n    prev() {\r\n        if (this.cursor > 0)\r\n            this.cursor--;\r\n        return this.current();\r\n    }\r\n    atEnd() {\r\n        return this.cursor == this.size() - 1;\r\n    }\r\n}\r\nexports.Timeline = Timeline;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst abstractPlayer_1 = require(\"../abstractPlayer\");\r\nconst d3 = __importStar(require(\"d3\"));\r\nclass SpectrumPlayer extends abstractPlayer_1.AbstractPlayer {\r\n    constructor(chartElement, timeline, props) {\r\n        super(chartElement, timeline, props);\r\n        this.initPlayer();\r\n    }\r\n    initPlayer() {\r\n        var _this = this;\r\n        this.elems = {};\r\n        // Body of the player\r\n        this.elems.svg = d3.select(\"body\")\r\n            .append('svg')\r\n            .attr('width', this.props.containerWidth)\r\n            .attr('height', this.props.containerHeight);\r\n        this.elems.g = this.elems.svg.append('g')\r\n            .attr('transform', 'translate(' + this.props.margin.left + ', ' + this.props.margin.top + ')')\r\n            .attr('overflow', 'hidden');\r\n        // Set the ranges\r\n        if (this.props.autoscale) {\r\n            this.props.domain = this.autoFindDomain();\r\n        }\r\n        else {\r\n            this.props.domain = this.findDomainForFrame();\r\n        }\r\n        this.elems.x = d3.scaleLinear().range([0, this.props.width]).domain([this.props.domain.minX, this.props.domain.maxX]);\r\n        this.elems.y = d3.scaleLinear().range([this.props.height, 0]).domain([this.props.domain.minY, this.props.domain.maxY]);\r\n        // Define the axes\r\n        this.elems.xAxis = d3.axisBottom(this.elems.x).ticks(4);\r\n        this.elems.yAxis = d3.axisLeft(this.elems.y);\r\n        // Draw axes\r\n        this.elems.g.append('g')\r\n            .attr('class', 'axis--x')\r\n            .attr('transform', 'translate(0, ' + this.props.height + ')')\r\n            .call(this.elems.xAxis);\r\n        this.elems.g.append('g')\r\n            .attr('class', 'axis--y')\r\n            .call(this.elems.yAxis)\r\n            .append('text')\r\n            .attr('transform', 'rotate(-90)')\r\n            .attr('y', 10)\r\n            .attr('dy', '.1em')\r\n            .attr('text-anchor', 'end')\r\n            .attr('fill', 'rgb(54, 54, 54)')\r\n            .attr('font-size', '1.2em');\r\n        // Brush\r\n        this.initBrush();\r\n        // The line\r\n        this.elems.line = d3.line()\r\n            .x(function (d) { return _this.elems.x(d.x); })\r\n            .y(function (d) { return _this.elems.y(d.y); });\r\n        //.curve(d3.curveMonotoneX);\r\n        // Clip\r\n        this.elems.g.append('defs')\r\n            .append('clipPath')\r\n            .attr('id', 'clip')\r\n            .append('rect')\r\n            .attr('x', 0)\r\n            .attr('y', 0)\r\n            .attr('width', this.props.width)\r\n            .attr('height', this.props.height);\r\n        this.elems.main = this.elems.g.append('g')\r\n            .attr('class', 'main')\r\n            .attr('clip-path', 'url(#clip)');\r\n        // Draw the path\r\n        this.elems.path = this.elems.main.append('path')\r\n            .attr('stroke', 'red')\r\n            .attr('stroke-width', 2)\r\n            .attr('shape-rendering', 'auto')\r\n            .attr('fill', 'none')\r\n            .attr('class', 'line');\r\n        this.voironoi();\r\n        // Focus\r\n        this.initFocus();\r\n        // init Overlay\r\n        this.initOverlay();\r\n        // CtrlBar\r\n        this.initControlBar();\r\n        // Display\r\n        this.display();\r\n        // Commands\r\n        this.initCommands();\r\n    }\r\n    play() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.state = true;\r\n            while (this.state && !this.timeline.atEnd()) {\r\n                this.next();\r\n                if (this.state = !this.timeline.atEnd()) {\r\n                    yield this.sleep(this.timeline.current().duration);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    next() {\r\n        this.timeline.next();\r\n        this.manualFindDomain();\r\n        this.display();\r\n    }\r\n    prev() {\r\n        this.timeline.prev();\r\n        this.manualFindDomain();\r\n        this.display();\r\n    }\r\n    pause() {\r\n        this.state = false;\r\n    }\r\n    reset() {\r\n        this.timeline.setCursor(0);\r\n        this.display();\r\n    }\r\n    display() {\r\n        this.voironoi();\r\n        // Pass data to path\r\n        this.elems.path.attr(\"d\", this.elems.line(this.timeline.current().points));\r\n        // CtrlBar\r\n        this.drawCtrlBar();\r\n    }\r\n    initBrush() {\r\n        if (this.props.brush) {\r\n            this.elems.brushcall = d3.brush().on(\"start\", () => { d3.select('.context-menu').remove(); }).on(\"end\", this.brushended.bind(this));\r\n            // Draw the brush\r\n            this.elems.brush = this.elems.svg.append(\"g\").attr(\"class\", \"brush\").call(this.elems.brushcall);\r\n        }\r\n    }\r\n    initFocus() {\r\n        if (this.props.focus) {\r\n            this.elems.focus = this.elems.g.append('g').style('display', 'none');\r\n            this.elems.focus.append('circle')\r\n                .attr('id', 'focusCircle')\r\n                .attr('r', 4)\r\n                .attr('class', 'circle focusCircle');\r\n            this.elems.focus.append('line')\r\n                .attr('id', 'focusLineX')\r\n                .attr('class', 'focusLine');\r\n            this.elems.focus.append('line')\r\n                .attr('id', 'focusLineY')\r\n                .attr('class', 'focusLine');\r\n            this.elems.focustextbg = this.elems.focus.append('rect')\r\n                .attr('id', 'focusTextBg')\r\n                .attr('class', 'focusTextBg')\r\n                .attr('transform', 'translate(' + 5 + ', ' + 0 + ')');\r\n            this.elems.focustext = this.elems.focus.append(\"text\")\r\n                .style(\"fill\", \" #41FF00\")\r\n                .attr('transform', 'translate(' + 7 + ', ' + 15 + ')');\r\n            this.focusText(\"0,1\");\r\n        }\r\n    }\r\n    focusText(text) {\r\n        this.elems.focustext.text(text);\r\n        if (!this.elems.focustext.node())\r\n            return;\r\n        var bbox = this.elems.focustext.node().getBBox();\r\n        this.elems.focustextbg\r\n            .attr(\"width\", bbox.width + 6)\r\n            .attr(\"height\", bbox.height);\r\n    }\r\n    initOverlay() {\r\n        var _this = this;\r\n        this.elems.svg.select('.overlay')\r\n            .attr('transform', 'translate(' + this.props.margin.left + ', ' + this.props.margin.top + ')')\r\n            .attr(\"class\", \"overlay\")\r\n            .attr(\"width\", this.props.width)\r\n            .attr(\"height\", this.props.height)\r\n            .on(\"mouseover\", function () { if (_this.elems.focus)\r\n            _this.elems.focus.style(\"display\", null); })\r\n            .on(\"mouseout\", function () { if (_this.elems.focus)\r\n            _this.elems.focus.style(\"display\", \"none\"); })\r\n            .on(\"dblclick\", function () {\r\n            _this.resetZoom();\r\n        })\r\n            .on('mousemove', function () {\r\n            if (_this.elems.focus) {\r\n                var m = d3.mouse(this);\r\n                // use the new diagram.find() function to find the Voronoi site\r\n                // closest to the mouse, limited by max distance voronoiRadius\r\n                var site = _this.elems.voronoiDiagram.find(m[0], m[1], _this.elems.voronoiRadius);\r\n                if (!site)\r\n                    return;\r\n                var x = site[0];\r\n                var y = site[1];\r\n                _this.elems.focus.select('#focusCircle')\r\n                    .attr('cx', x)\r\n                    .attr('cy', y);\r\n                _this.elems.focus.select('#focusLineX')\r\n                    .attr('x1', x).attr('y1', _this.elems.y(_this.elems.y.domain()[0]))\r\n                    .attr('x2', x).attr('y2', _this.elems.y(_this.elems.y.domain()[1]));\r\n                _this.elems.focus.select('#focusLineY')\r\n                    .attr('x1', _this.elems.x(_this.elems.x.domain()[0])).attr('y1', y)\r\n                    .attr('x2', _this.elems.x(_this.elems.x.domain()[1])).attr('y2', y);\r\n                _this.focusText(site.data.x + \", \" + site.data.y);\r\n            }\r\n        });\r\n        d3.select('body')\r\n            .on('click', function () {\r\n            d3.select('.context-menu').remove();\r\n        }).on('contextmenu', function () {\r\n            d3.event.preventDefault();\r\n            var m = d3.mouse(this);\r\n            if (!_this.elems.menu) {\r\n                _this.elems.menu = _this.contextMenu();\r\n            }\r\n            _this.elems.menu(m[0], m[1]);\r\n        });\r\n    }\r\n    initControlBar() {\r\n        if (this.props.ctrlbar) {\r\n            var _this = this;\r\n            this.elems.ctrlBarBg = this.elems.svg.append('rect')\r\n                .attr('class', 'progress-rect-bg pointer')\r\n                .attr('fill', 'grey')\r\n                .attr('height', 15)\r\n                .attr('width', this.props.width)\r\n                .attr('x', this.props.margin.left)\r\n                .attr('y', this.props.containerHeight - 30);\r\n            this.elems.ctrlBar = this.elems.svg.append('rect')\r\n                .attr('class', 'progress-rect pointer')\r\n                .attr('fill', 'red')\r\n                .attr('height', 15)\r\n                .attr('width', (this.props.width))\r\n                .attr('x', this.props.margin.left)\r\n                .attr('y', this.props.containerHeight - 30);\r\n            var reDrawCtrlBar = function () {\r\n                var mouse = d3.mouse(this);\r\n                var mx = mouse[0] - _this.props.margin.left;\r\n                var my = mouse[1];\r\n                var cursor = Math.floor((_this.timeline.size() / _this.props.width) * mx);\r\n                _this.pause();\r\n                _this.timeline.setCursor(cursor);\r\n                _this.manualFindDomain();\r\n                _this.display();\r\n            };\r\n            this.elems.ctrlBarBg.call(d3.drag().on(\"start\", reDrawCtrlBar).on(\"end\", reDrawCtrlBar).on(\"drag\", reDrawCtrlBar));\r\n            this.elems.ctrlBar.call(d3.drag().on(\"start\", reDrawCtrlBar).on(\"end\", reDrawCtrlBar).on(\"drag\", reDrawCtrlBar));\r\n        }\r\n    }\r\n    drawCtrlBar() {\r\n        if (this.props.ctrlbar) {\r\n            this.elems.ctrlBar\r\n                .attr('width', (this.props.width / (this.timeline.size() - 1)) * this.timeline.cursor);\r\n        }\r\n    }\r\n    voironoi() {\r\n        var _this = this;\r\n        // voironoi\r\n        this.elems.voronoiDiagram = d3.voronoi()\r\n            .x(function (d) { return _this.elems.x(d.x); })\r\n            .y(function (d) { return _this.elems.y(d.y); })\r\n            .size([this.props.containerWidth, this.props.containerHeight])(this.timeline.current().points);\r\n        this.elems.voronoiRadius = this.props.width;\r\n    }\r\n    autoFindDomain() {\r\n        // Scan the timeline\r\n        var domain = {\r\n            minX: +Infinity,\r\n            maxX: -Infinity,\r\n            minY: +Infinity,\r\n            maxY: -Infinity\r\n        };\r\n        this.timeline.frames.forEach((f) => {\r\n            domain.minX = Math.min(domain.minX, ...f.points.map((p) => { return p.x; }));\r\n            domain.maxX = Math.max(domain.maxX, ...f.points.map((p) => { return p.x; }));\r\n            domain.minY = Math.min(domain.minY, ...f.points.map((p) => { return p.y; }));\r\n            domain.maxY = Math.max(domain.maxY, ...f.points.map((p) => { return p.y; }));\r\n        });\r\n        if (this.props.domain_offset) {\r\n            domain.minX -= this.props.domain_offset.min_x;\r\n            domain.maxX += this.props.domain_offset.max_x;\r\n            domain.minY -= this.props.domain_offset.min_y;\r\n            domain.maxY += this.props.domain_offset.max_y;\r\n        }\r\n        return domain;\r\n    }\r\n    manualFindDomain() {\r\n        if (this.props.autoscale) {\r\n            return;\r\n        }\r\n        this.props.domain = this.findDomainForFrame();\r\n        this.updateDomainAndScale();\r\n    }\r\n    findDomainForFrame() {\r\n        var domain = {\r\n            minX: +Infinity,\r\n            maxX: -Infinity,\r\n            minY: +Infinity,\r\n            maxY: -Infinity\r\n        };\r\n        if (this.props.fixedXscale && !this.props.fixed_minY) {\r\n            this.timeline.frames.forEach((f) => {\r\n                domain.minY = Math.min(domain.minY, ...f.points.map((p) => { return p.y; }));\r\n                domain.maxY = Math.max(domain.maxY, ...f.points.map((p) => { return p.y; }));\r\n            });\r\n            this.props.fixed_minY = domain.minY;\r\n            this.props.fixed_maxY = domain.maxY;\r\n        }\r\n        let f = this.timeline.current();\r\n        domain.minX = Math.min(domain.minX, ...f.points.map((p) => { return p.x; }));\r\n        domain.maxX = Math.max(domain.maxX, ...f.points.map((p) => { return p.x; }));\r\n        if (this.props.fixedXscale) {\r\n            domain.minY = this.props.fixed_minY;\r\n            domain.maxY = this.props.fixed_maxY;\r\n        }\r\n        else {\r\n            domain.minY = Math.min(domain.minY, ...f.points.map((p) => { return p.y; }));\r\n            domain.maxY = Math.max(domain.maxY, ...f.points.map((p) => { return p.y; }));\r\n        }\r\n        return domain;\r\n    }\r\n    updateDomainAndScale() {\r\n        this.elems.x.domain([this.props.domain.minX, this.props.domain.maxX]);\r\n        this.elems.y.domain([this.props.domain.minY, this.props.domain.maxY]);\r\n        var t = this.elems.svg.transition().duration(0);\r\n        this.elems.g.select(\".axis--x\").transition(t).call(this.elems.xAxis);\r\n        this.elems.g.select(\".axis--y\").transition(t).call(this.elems.yAxis);\r\n    }\r\n    setTimeLine(timeline) {\r\n        this.timeline = timeline;\r\n        this.display();\r\n    }\r\n    // Brush\r\n    brushended() {\r\n        var s = d3.event.selection;\r\n        if (s) {\r\n            this.elems.x.domain([s[0][0] * this.props.ratio, s[1][0]].map(this.elems.x.invert, this.elems.x));\r\n            this.elems.y.domain([s[1][1], s[0][1] * this.props.ratio].map(this.elems.y.invert, this.elems.y));\r\n            this.elems.svg.select(\".brush\").call(this.elems.brushcall.move, null);\r\n        }\r\n        this.zoom();\r\n    }\r\n    // Zoom\r\n    zoom() {\r\n        var t = this.elems.svg.transition().duration(0);\r\n        this.elems.g.select(\".axis--x\").transition(t).call(this.elems.xAxis);\r\n        this.elems.g.select(\".axis--y\").transition(t).call(this.elems.yAxis);\r\n        this.voironoi();\r\n        this.display();\r\n    }\r\n    resetZoom() {\r\n        this.elems.x.domain([this.props.domain.minX, this.props.domain.maxX]);\r\n        this.elems.y.domain([this.props.domain.minY, this.props.domain.maxY]);\r\n        this.zoom();\r\n    }\r\n    // Context Menu\r\n    contextMenu() {\r\n        var _this = this;\r\n        var height = 0;\r\n        var width = 0;\r\n        var margin = 0.1;\r\n        var items = [\r\n            { text: function () {\r\n                    if (_this.props.autoscale) {\r\n                        return \"unlock axes\";\r\n                    }\r\n                    return \"lock axes\";\r\n                }, f: function () {\r\n                    if (_this.props.autoscale) {\r\n                        _this.props.autoscale = false;\r\n                        _this.props.domain = _this.findDomainForFrame();\r\n                        _this.updateDomainAndScale();\r\n                        _this.display();\r\n                    }\r\n                    else {\r\n                        _this.props.autoscale = true;\r\n                        _this.props.domain = _this.autoFindDomain();\r\n                        _this.updateDomainAndScale();\r\n                        _this.display();\r\n                    }\r\n                } },\r\n        ];\r\n        var rescale = true;\r\n        function menu(x, y) {\r\n            d3.select('.context-menu').remove();\r\n            scaleItems();\r\n            // Draw the menu\r\n            d3.select('svg')\r\n                .append('g').attr('class', 'context-menu')\r\n                .selectAll('tmp')\r\n                .data(items).enter()\r\n                .append('g').attr('class', 'menu-entry')\r\n                .style('cursor', 'pointer')\r\n                .on('mouseover', function () {\r\n                d3.select(this).select('rect').attr('class', 'mouseover');\r\n            })\r\n                .on('mouseout', function () {\r\n                d3.select(this).select('rect')\r\n                    .attr('class', 'mouseout');\r\n            });\r\n            d3.selectAll('.menu-entry')\r\n                .append('rect')\r\n                .attr('class', 'mouseout')\r\n                .attr('x', x)\r\n                .attr('y', function (d, i) { return y + (i * height); })\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .on('click', function (datum) {\r\n                datum.f();\r\n            });\r\n            d3.selectAll('.menu-entry')\r\n                .append('text')\r\n                .text(function (d) { return d.text(); })\r\n                .attr('x', x)\r\n                .attr('y', function (d, i) { return y + (i * height); })\r\n                .attr('dy', height - margin / 2)\r\n                .attr('dx', margin)\r\n                .on('click', function (datum) {\r\n                datum.f();\r\n            });\r\n            function scaleItems() {\r\n                if (rescale) {\r\n                    d3.select('svg').selectAll('tmp')\r\n                        .data(items).enter()\r\n                        .append('text')\r\n                        .text(function (d) { return d.text(); })\r\n                        .attr('x', -1000)\r\n                        .attr('y', -1000)\r\n                        .attr('class', 'tmp');\r\n                    var z = d3.selectAll('.tmp').nodes()\r\n                        .map(function (x) { return x.getBBox(); });\r\n                    width = 80;\r\n                    margin = margin * width;\r\n                    width = width + 2 * margin;\r\n                    height = d3.max(z.map(function (x) { return x.height + margin / 2; }));\r\n                    // cleanup\r\n                    d3.selectAll('.tmp').remove();\r\n                    rescale = false;\r\n                }\r\n            }\r\n        }\r\n        return menu;\r\n    }\r\n}\r\nexports.SpectrumPlayer = SpectrumPlayer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet CONTAINER_WIDTH = 600;\r\nlet CONTAINER_HEIGHT = 370;\r\nlet MARGIN_TOP = 30;\r\nlet MARGIN_LEFT = 30;\r\nlet MARGIN_BOTTOM = 60;\r\nlet MARGIN_RIGHT = 20;\r\nlet WIDTH = CONTAINER_WIDTH - MARGIN_LEFT - MARGIN_RIGHT;\r\nlet HEIGHT = CONTAINER_HEIGHT - MARGIN_TOP - MARGIN_BOTTOM;\r\nexports.SpectrumPlayerConfig = {\r\n    containerWidth: CONTAINER_WIDTH,\r\n    containerHeight: CONTAINER_HEIGHT,\r\n    margin: { top: MARGIN_TOP, right: MARGIN_RIGHT, bottom: MARGIN_BOTTOM, left: MARGIN_LEFT },\r\n    width: WIDTH,\r\n    height: HEIGHT,\r\n    ratio: HEIGHT / WIDTH,\r\n    domain_offset: { min_x: 1000000000, max_x: 1000000000, min_y: 10, max_y: 10 },\r\n    brush: true,\r\n    focus: true,\r\n    ctrlbar: true,\r\n    autoscale: false,\r\n    fixedXscale: true\r\n};\r\n","export var name = \"d3\";\nexport var version = \"5.7.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear\";\n\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export {version} from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n"],"sourceRoot":""}